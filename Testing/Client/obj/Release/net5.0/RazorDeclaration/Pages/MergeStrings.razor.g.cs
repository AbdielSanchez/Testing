// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Testing.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using Testing.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using Testing.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Blazor\Testing\Testing\Client\_Imports.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Blazor\Testing\Testing\Client\Pages\MergeStrings.razor"
using Syncfusion.Blazor.Inputs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Blazor\Testing\Testing\Client\Pages\MergeStrings.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Blazor\Testing\Testing\Client\Pages\MergeStrings.razor"
using Testing.Shared;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/mergeStrings")]
    public partial class MergeStrings : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 41 "D:\Blazor\Testing\Testing\Client\Pages\MergeStrings.razor"
       

    private string s1;
    private string s2;
    private string b;

    private string Message = string.Empty;
    private Annotation annotation = new Annotation();
    private void OnValidSubmit()
    {
        s1 = annotation.Name;
        s2 = annotation.Address;

        Merge();
        StateHasChanged();
    }

    private void Merge()
    {
        var n = s1.Length < s2.Length ? s2.Length * 2 : s1.Length * 2;

        List<char> s1chars = s1.ToList();
        List<char> s2chars = s2.ToList();
        List<char> a = new List<char>();

        for (int i = 0; i < n; i++)
        {
            if(s1chars.Count < 1 || s2chars.Count < 1)
            {
                string tailstring = new String(s1chars.ToArray()) + new String(s2chars.ToArray());
                annotation.Name += tailstring;
                b = new String(a.ToArray());
                annotation.Address = b + tailstring;
                break;
            }
            var minchar = s1chars[0] < s2chars[0] ? s1chars[0] : s2chars[0];
            a.Add(minchar);
            annotation.Name += " " + a[i].ToString();
            if (s1chars[0] < s2chars[0])
            {
                s1chars.RemoveAt(0);
            }
            else
            {
                s2chars.RemoveAt(0);
            }
        }
    }

    private void OnInvalidSubmit()
    {
        Message = string.Empty;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
