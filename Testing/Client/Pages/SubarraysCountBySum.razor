@page "/subarraysCountBySum"
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons;
@using Testing.Shared;

<h3>SubarraysCountBySum</h3>

<div class="control-section col-lg-12">
    <div class="content wrapper">
        @if (string.IsNullOrEmpty(Message))
        {
            <EditForm Model="@subarray" OnValidSubmit="@OnValidSubmit" OnInvalidSubmit="@OnInvalidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <div class="textbox">
                        <label for="arr" style="padding: 20px 0 5px 0">arr</label>
                        <SfTextBox id='textbox' @bind-Value="@subarray.arr" Placeholder="ingresa un array de ints"></SfTextBox>
                    </div>
                    <div class="textbox">
                        <label for="k" style="padding: 20px 0 5px 0">k</label>
                        <SfTextBox id='textbox' @bind-Value="@subarray.k" Placeholder="Ingresa un int positivo"></SfTextBox>
                    </div>
                    <div class="multilinetextbox">
                        <label for="s" style="padding: 10px 0 5px 0">s</label>
                        <SfTextBox @bind-Value="@subarray.s" Multiline="true" Placeholder="ingresa un long"></SfTextBox>
                        <ValidationMessage For="@(() => subarray.s)" />
                    </div>
                </div>
                <div class="sfButton">
                    <SfButton type="submit" IsPrimary="true">Submit</SfButton>
                </div>
            </EditForm>
        }
        else
        {
            <div class="alert alert-success">
                @Message
            </div>
        }
    </div>
</div>

@code {

    private int[] arr;
    private int k;
    private long s;
    private int n;

    private string Message = string.Empty;
    private SubarrayForm subarray = new SubarrayForm();
    private void OnValidSubmit()
    {
        arr = Array.ConvertAll(subarray.arr.ToCharArray(), c => (int)Char.GetNumericValue(c));
        k = int.Parse(subarray.k);
        s = long.Parse(subarray.s);
        subarraysCountBySum();
        StateHasChanged();
    }

    private void subarraysCountBySum()
    {
        List<int> a = new List<int>();
        int j = 0;
        while(k + j < arr.Length)
        {
            for (int i = 0; i < k + j; i++)
            {
                a.Add(arr[i]);
                if (a.Sum() == s)
                {
                    n++;
                    a.Clear();
                    break;
                }
            }
        }
    }

    private void OnInvalidSubmit()
    {
        Message = string.Empty;
    }
}
